"""
Django settings for ddsx project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%&jwtot!o5%etb*v_0f!llnxmen8xol94txgwk563b6lwlbeb%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'seller',
    'buyer',  # 安装buyer
    'rest_framework',  # 安装drf
    'buyer.templatetags'  # 安装 templatetags
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',  # 开始
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'middleware.mymiddleware.MD1',  # 安装中间件
    'middleware.authmiddleware.AuthMD',  # 后台权限
    # 'django.middleware.cache.FetchFromCacheMiddleware'  # 结束
]
# 设置缓存的时间
# CACHE_MIDDLEWARE_SECONDS = 10

ROOT_URLCONF = 'ddsx.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ddsx.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# 1. 设置常量，设置文件上传的目录
MEDIA_ROOT = os.path.join(BASE_DIR, 'static')

# 设置分页
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 2
}

# 配置发送邮件信息
# 邮箱配置 注意不要手打！！！
EMAIL_HOST_USER = 'python_liurui@163.com'  # 登录服务器的用户名
EMAIL_HOST_PASSWORD = 'TZSTFOLSVOGJRUWF'  # 授权码
EMAIL_USE_SSL = True  # SSL  表示更加安全
EMAIL_HOST = 'smtp.163.com'  # 主机
EMAIL_PORT = 994  # 端口号

# 内存介质，将内容缓存到内存中
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
#         'LOCATION': 'hello',  # 保存的位置
#         'TIMEOUT': '10'  # 缓存时间
#     }
# }

# 文件缓存
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': os.path.join(BASE_DIR, 'cache_file'),  # 保存的位置
#         'TIMEOUT': '10'  # 缓存时间
#     }
# }

# 数据库缓存
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'dbcache',  # 数据库表格名称,
#         # 需要手动生成 python manage.py createcachetable
#         'TIMEOUT': '10'  # 缓存时间
#     }
# }

#  使用memcache
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',  # 端口号 11211
        'TIMEOUT': '10'  # 缓存时间
    }
}
